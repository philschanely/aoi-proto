@mixin btn($height: 40px, $bg-color: $color-green, $color: $color-grey-300, $border-color: transparent, $font-size: 1em) {
  @extend %type-base;

  @include md-shadow(1);

  padding: 0 $height/2;
  height: $height;
  color: $color;
  text-transform: uppercase;
  background-color: $bg-color;
  border: 1px solid $border-color;
  border-radius: $height/2;
  cursor: pointer;

  &:hover {
    @include md-shadow(4);
  }
}

@mixin btn-off($color: $color-white) {
  padding: 0;
  height: auto;
  color: $color;
  background-color: transparent;
  border: none;
  box-shadow: none;

  &:hover {
    box-shadow: none;
  }
}

@mixin grid-app() {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: [left] 60px 1fr [right];
  grid-template-rows: [top] 40px 1fr auto [bottom];
  grid-template-areas:
    "nav     brand"
    "tasks   tasks"
    "options options";

  @media screen and (min-width: $size-desktop) {
    grid-template-columns: [left] 300px 1fr [right];
    grid-template-rows: [top] 80px 1fr [bottom];
    grid-template-areas:
      "brand options"
      "nav   tasks";
  }

  header {
    grid-area: brand;
  }

  nav {
    grid-area: nav;
  }

  aside {
    grid-area: options;
  }

  main {
    grid-area: tasks;
  }
}

@mixin grid-modal {
  display: grid;
  grid-template-columns: 10px 1fr 10px;
  grid-template-rows: 1fr auto 1fr;
  grid-template-areas:
    ". .       ."
    ". content ."
    ". .       .";

  @media screen and (min-width: 600px) {
    grid-template-columns: 1fr auto 1fr;
    grid-template-rows: 1fr auto 1fr;
  }

  .modal-content {
    grid-area: content;
  }
}

@mixin grid-task() {
  padding: 10px;
  display: grid;
  grid-template-columns: 30px 1fr;
  grid-template-rows: 30px 1fr;
  grid-template-areas:
    "status date"
    ".      content";

  .status {
    grid-area: status;
  }

  .due-date {
    grid-area: date;
  }

  .content {
    grid-area: content;
  }
}

@mixin grid-task-list() {
  padding: 10px;
  display: flex;
  flex-flow: row wrap;
}

@mixin grid-task-tray() {
  display: grid;
  justify-content: space-between;
  grid-template-columns: auto auto auto;
  grid-template-areas: "delete types save";

  .delete-task {
    grid-area: delete;
  }

  .save-task {
    grid-area: save;
  }

  .types {
    grid-area: types;
  }
}

@mixin img-replacement($width: auto) {
  width: $width;
  text-indent: -9999px;
  background-repeat: no-repeat;
  background-position: center center;
}

@mixin input-styles() {
  @extend %type-base;

  padding: 10px;
  width: 100%;
  display: block;
  box-sizing: border-box;
  background-color: transparent;
  border: none;
  border-bottom: 1px solid $color-grey-300;
}

@mixin md-shadow($depth: 2) {
  box-shadow: 0 ($depth * 3 * 1px) ($depth * 3 * 2px) rgba(0, 0, 0, (.12 + (4 * ($depth - 1)) / 100)), 0 1px 2px rgba(0, 0, 0, .24);
  transition: all .3s cubic-bezier(.25, .8, .25, 1);
}
